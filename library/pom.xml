
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.datatorrent</groupId>
    <artifactId>dt-megh</artifactId>
    <version>3.3.0-SNAPSHOT</version>
  </parent>

  <artifactId>dt-library</artifactId>
  <packaging>jar</packaging>

  <name>DTX Operator and Codec Library</name>

  <properties>
    <maven.deploy.skip>false</maven.deploy.skip>
  </properties>

  <build>
    <plugins>
      <!-- Publish tests jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>
      <!-- create resource directory for xml javadoc-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>createJavadocDirectory</id>
            <phase>generate-resources</phase>
            <configuration>
              <tasks>
                <delete dir="${project.build.directory}/generated-resources/xml-javadoc"/>
                <mkdir dir="${project.build.directory}/generated-resources/xml-javadoc"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- generate javdoc -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <!-- generate xml javadoc -->
          <execution>
            <id>xml-doclet</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>javadoc</goal>
            </goals>
            <configuration>
              <doclet>com.github.markusbernhardt.xmldoclet.XmlDoclet</doclet>
              <additionalparam>-d ${project.build.directory}/generated-resources/xml-javadoc -filename ${project.artifactId}-${project.version}-javadoc.xml</additionalparam>
              <useStandardDocletOptions>false</useStandardDocletOptions>
              <docletArtifact>
                <groupId>com.github.markusbernhardt</groupId>
                <artifactId>xml-doclet</artifactId>
                <version>1.0.4</version>
              </docletArtifact>
            </configuration>
          </execution>
          <!-- generate default javadoc jar with custom tags -->
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <skip>true</skip>
              <tags>
                <tag>
                  <name>customTag1</name>
                  <placement>a</placement>
                  <head>Custom Tag One:</head>
                </tag>
                <tag>
                  <name>customTag2</name>
                  <placement>a</placement>
                  <head>Custom Tag two:</head>
                </tag>
                <tag>
                  <name>customTag3</name>
                  <placement>a</placement>
                  <head>Custom Tag three:</head>
                </tag>
              </tags>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Transform xml javadoc to stripped down version containing only class/interface comments and tags-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <id>transform-xmljavadoc</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>transform</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <transformationSets>
            <transformationSet>
              <dir>${project.build.directory}/generated-resources/xml-javadoc</dir>
              <includes>
                <include>${project.artifactId}-${project.version}-javadoc.xml</include>
              </includes>
              <stylesheet>XmlJavadocCommentsExtractor.xsl</stylesheet>
              <outputDir>${project.build.directory}/generated-resources/xml-javadoc</outputDir>
            </transformationSet>
          </transformationSets>
        </configuration>
      </plugin>
      <!-- copy xml javadoc to class jar -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/generated-resources/xml-javadoc</directory>
                  <includes>
                    <include>${project.artifactId}-${project.version}-javadoc.xml</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.apache.apex</groupId>
      <artifactId>apex-api</artifactId>
      <version>${apex.core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.trove4j</groupId>
      <artifactId>trove4j</artifactId>
      <version>3.0.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.apex</groupId>
      <artifactId>malhar-library</artifactId>
      <version>${malhar.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.apache.apex</groupId>
      <artifactId>malhar-library</artifactId>
      <version>${malhar.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.esotericsoftware.kryo</groupId>
      <artifactId>kryo</artifactId>
      <version>2.24.0</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.apache.apex</groupId>
      <artifactId>apex-common</artifactId>
      <version>${apex.core.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>it.unimi.dsi</groupId>
      <artifactId>fastutil</artifactId>
      <version>6.6.4</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <version>2.7.8</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sangupta</groupId>
      <artifactId>murmur</artifactId>
      <version>1.0.0</version>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>fullTests</id>
      <properties>
        <test.excludedGroups></test.excludedGroups>
      </properties>
    </profile>
    <profile>
      <id>release</id>
      <properties>
        <source.skip>true</source.skip>
      </properties>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <phase>package</phase>
                <id>obfuscate</id>
                <configuration>
                  <target unless="${obfuscation.skip}">
                    <echo message="running allatori"/>
                    <property name="obf.jar" value="target/${project.build.finalName}.jar"/>
                    <property name="compile_classpath" refid="maven.runtime.classpath"/>
                    <taskdef name="allatori" classname="com.allatori.ant.ObfuscatorTask" classpath="${env.ALLATORI_LIB}/allatori.jar:${compile_classpath}"/>
                    <allatori config="${basedir}/allatori-config.xml"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
