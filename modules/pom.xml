<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.datatorrent</groupId>
    <artifactId>dt-megh</artifactId>
    <version>3.3.0-SNAPSHOT</version>
  </parent>

  <artifactId>dt-modules</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>modules</name>

  <properties>
    <megh.version>${project.parent.version}</megh.version>
    <checkstyle.console>false</checkstyle.console>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!-- Publish tests jar -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
              <phase>package</phase>
            </execution>
          </executions>
        </plugin>
        <!-- create resource directory for xml javadoc-->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <executions>
            <execution>
              <id>createJavadocDirectory</id>
              <phase>generate-resources</phase>
              <configuration>
                <tasks>
                  <delete dir="${project.build.directory}/generated-resources/xml-javadoc"/>
                  <mkdir dir="${project.build.directory}/generated-resources/xml-javadoc"/>
                </tasks>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- generate javdoc -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <executions>
            <!-- generate xml javadoc -->
            <execution>
              <id>xml-doclet</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>javadoc</goal>
              </goals>
              <configuration>
                <doclet>com.github.markusbernhardt.xmldoclet.XmlDoclet</doclet>
                <additionalparam>-d ${project.build.directory}/generated-resources/xml-javadoc -filename ${project.artifactId}-${project.version}-javadoc.xml</additionalparam>
                <useStandardDocletOptions>false</useStandardDocletOptions>
                <docletArtifact>
                  <groupId>com.github.markusbernhardt</groupId>
                  <artifactId>xml-doclet</artifactId>
                  <version>1.0.4</version>
                </docletArtifact>
              </configuration>
            </execution>
            <!-- generate default javadoc jar with custom tags -->
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar</goal>
              </goals>
              <configuration>
                <skip>true</skip>
                <tags>
                  <tag>
                    <name>customTag1</name>
                    <placement>a</placement>
                    <head>Custom Tag One:</head>
                  </tag>
                  <tag>
                    <name>customTag2</name>
                    <placement>a</placement>
                    <head>Custom Tag two:</head>
                  </tag>
                  <tag>
                    <name>customTag3</name>
                    <placement>a</placement>
                    <head>Custom Tag three:</head>
                  </tag>
                </tags>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- Transform xml javadoc to stripped down version containing only class/interface comments and tags-->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>xml-maven-plugin</artifactId>
          <version>1.0</version>
          <executions>
            <execution>
              <id>transform-xmljavadoc</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>transform</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <transformationSets>
              <transformationSet>
                <dir>${project.build.directory}/generated-resources/xml-javadoc</dir>
                <includes>
                  <include>${project.artifactId}-${project.version}-javadoc.xml</include>
                </includes>
                <stylesheet>XmlJavadocCommentsExtractor.xsl</stylesheet>
                <outputDir>${project.build.directory}/generated-resources/xml-javadoc</outputDir>
              </transformationSet>
            </transformationSets>
          </configuration>
        </plugin>
        <!-- copy xml javadoc to class jar -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
          <executions>
            <execution>
              <id>copy-resources</id>
              <phase>process-resources</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${basedir}/target/classes</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.build.directory}/generated-resources/xml-javadoc</directory>
                    <includes>
                      <include>${project.artifactId}-${project.version}-javadoc.xml</include>
                    </includes>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>2.17</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>6.12.1</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>checkstyle</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <failOnViolation>true</failOnViolation>
                <logViolationsToConsole>${checkstyle.console}</logViolationsToConsole>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <configLocation>../apex_checks.xml</configLocation>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.apex</groupId>
      <artifactId>apex-engine</artifactId>
      <version>${apex.core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.apex</groupId>
      <artifactId>apex-api</artifactId>
      <version>${apex.core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.apex</groupId>
      <artifactId>malhar-library</artifactId>
      <version>${malhar.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <scope>test</scope>
      <groupId>org.apache.apex</groupId>
      <artifactId>malhar-library</artifactId>
      <version>${malhar.version}</version>
      <classifier>tests</classifier>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.datatorrent</groupId>
      <artifactId>dt-library</artifactId>
      <version>${megh.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <modules>
  </modules>
</project>
