<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.apex</groupId>
    <artifactId>malhar</artifactId>
    <version>3.3.0-incubating-SNAPSHOT</version>
  </parent>

  <groupId>com.datatorrent</groupId>
  <artifactId>dt-megh</artifactId>
  <version>3.3.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Megh</name>
  <description>Megh proprietary operator libraries</description>
  <url>https://www.datatorrent.com/</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <semver.plugin.skip>false</semver.plugin.skip>
    <malhar.version>3.2.0-incubating</malhar.version>
  </properties>

  <profiles>
    <profile>
      <activation>
        <file>
          <exists>src</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.siom79.japicmp</groupId>
            <artifactId>japicmp-maven-plugin</artifactId>
            <version>0.5.3</version>
            <configuration>
              <oldVersion>
                <dependency>
                  <groupId>com.datatorrent</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <version>3.0.0</version>
                </dependency>
              </oldVersion>
              <newVersion>
                <file>
                  <path>${project.build.directory}/${project.artifactId}-${project.version}.jar</path>
                </file>
              </newVersion>
              <parameter>
                <onlyModified>true</onlyModified>
                <accessModifier>protected</accessModifier>
                <breakBuildOnModifications>false</breakBuildOnModifications>
                <breakBuildOnBinaryIncompatibleModifications>true</breakBuildOnBinaryIncompatibleModifications>
                <onlyBinaryIncompatible>false</onlyBinaryIncompatible>
                <includeSynthetic>false</includeSynthetic>
                <ignoreMissingClasses>true</ignoreMissingClasses>
                <excludes>
                  <exclude>com.datatorrent.lib.appdata.schemas.DataResultDimensional#getQuery()</exclude>
                  <exclude>com.datatorrent.lib.bucket.AbstractBucketManager#clone()</exclude>
                  <exclude>com.datatorrent.lib.bucket.AbstractTimeBasedBucketManager#clone()</exclude>
                  <exclude>com.datatorrent.lib.bucket.AbstractTimeBasedBucketManager#cloneWithProperties()</exclude>
                  <exclude>com.datatorrent.lib.bucket.BucketManagerImpl#cloneWithProperties()</exclude>
                  <exclude>com.datatorrent.lib.bucket.BucketManagerImpl#createBucket(long)</exclude>
                  <exclude>com.datatorrent.lib.bucket.HdfsBucketStore#clone()</exclude>
                  <exclude>com.datatorrent.lib.bucket.NonOperationalBucketStore#clone()</exclude>
                  <exclude>*ExternalizableSerializer#read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input, java.lang.Class)</exclude>
                  <exclude>com.datatorrent.lib.bucket.TimeBasedBucketManagerPOJOImpl#createBucket(long)</exclude>
                  <exclude>com.datatorrent.lib.dedup.DeduperPOJOImpl#getBucketManager()</exclude>
                  <exclude>com.datatorrent.lib.bucket.ExpirableHdfsBucketStore#clone()</exclude>
                  <exclude>com.datatorrent.lib.bucket.TimeBasedBucketManagerImpl#createBucket(long)</exclude>
                  <exclude>com.datatorrent.contrib.hdht.HDHTFileAccessFSImpl#getInputStream(long,java.lang.String)</exclude>
                  <exclude>com.datatorrent.contrib.hdht.HDHTFileAccessFSImpl#getOutputStream(long,java.lang.String)</exclude>
                  <exclude>*#B(java.lang.String)</exclude>
                </excludes>
              </parameter>
              <skip>${semver.plugin.skip}</skip>
            </configuration>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>cmp</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!-- repository to provide the DataTorrent artifacts -->
  <repositories>
    <repository>
      <id>ossrh</id>
      <name>Sonatype Snapshots Repository</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
    <repository>
      <id>datatorrent</id>
      <name>DataTorrent Release Repository</name>
      <url>https://www.datatorrent.com/maven/content/repositories/releases/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <modules>
    <module>library</module>
    <module>contrib</module>
    <module>demos</module>
    <module>flume</module>
  </modules>

</project>
